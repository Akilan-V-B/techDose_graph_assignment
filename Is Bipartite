class Solution {
    public boolean isBipartite(int[][] graph) {
        int n = graph.length;
        int []vis = new int[n];
        for(int i=0;i<n;i++){
            if(vis[i]!=0) continue;
            Queue<Integer> q = new LinkedList<>();
            q.add(i);
            vis[i]=1;
            while(!q.isEmpty()){
                int curr = q.poll();
                for(int k : graph[curr]){
                    if(vis[k]!=0 && vis[k]==vis[curr]) return false;
                    else if(vis[k]==0){
                        vis[k]=vis[curr]*-1;
                        q.add(k);
                    }
                }
            }
        } 
        return true;
    }
}
